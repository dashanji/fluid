---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vineyardruntimes.data.fluid.io
spec:
  group: data.fluid.io
  names:
    kind: VineyardRuntime
    listKind: VineyardRuntimeList
    plural: vineyardruntimes
    singular: vineyardruntime
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VineyardRuntime is the Schema for the vineyardruntimes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VineyardRuntimeSpec defines the desired state of VineyardRuntime
            properties:
              clusterDomain:
                default: cluster.local
                description: ClusterDomain is the domain of cluster
                type: string
              etcd:
                description: Etcd is the configuration of etcd
                properties:
                  enableSecureTransport:
                    default: false
                    description: EnableSecureTransport is the flag of enabling secure
                      transport
                    type: boolean
                  persistent:
                    description: Persistent is the configuration of persistent volume
                      claim
                    properties:
                      accessModes:
                        description: AccessModes is the access modes of persistent
                          volume claim
                        items:
                          type: string
                        type: array
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotaions is the annotations of persistent volume
                          claim
                        type: object
                      enabled:
                        default: false
                        description: Enable persistent
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is the labels of persistent volume claim
                        type: object
                      selector:
                        additionalProperties:
                          type: string
                        description: Selector is the selector of persistent volume
                          claim
                        type: object
                      size:
                        default: ""
                        description: Size is the size of persistent volume claim
                        type: string
                      storageClassName:
                        default: ""
                        description: StorageClassName is the storage class name of
                          persistent volume claim
                        type: string
                    type: object
                  replicas:
                    default: 1
                    description: Replicas is the number of etcd pods to deploy
                    format: int32
                    type: integer
                  service:
                    description: Service is the configuration of etcd service
                    properties:
                      clientPort:
                        default: 2379
                        description: ClientPort is the port of etcd client
                        format: int32
                        type: integer
                      enabled:
                        default: false
                        description: Enable service
                        type: boolean
                      peerPort:
                        default: 2380
                        description: PeerPort is the port of etcd peer
                        format: int32
                        type: integer
                      protocol:
                        default: TCP
                        description: Protocol is the protocol of service
                        type: string
                      type:
                        default: ClusterIP
                        description: Type is the type of service
                        type: string
                    type: object
                type: object
              fuse:
                description: Fuse is the configuration of vineyard fuse
                properties:
                  cleanPolicy:
                    description: 'CleanPolicy decides when to clean Alluxio Fuse pods.
                      Currently Fluid supports two policies: OnDemand and OnRuntimeDeleted
                      OnDemand cleans fuse pod once the fuse pod on some node is not
                      needed OnRuntimeDeleted cleans fuse pod only when the cache
                      runtime is deleted Defaults to OnRuntimeDeleted'
                    type: string
                  global:
                    default: true
                    description: If the fuse client should be deployed in global mode,
                      otherwise the affinity should be considered
                    type: boolean
                  image:
                    default: busybox
                    description: the image of vineyard fuse (mount vineyard socket)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: the image pull policy of vineyard fuse image (mount
                      vineyard socket)
                    type: string
                  imageTag:
                    default: latest
                    description: the tag of vineyard fuse image (mount vineyard socket)
                    type: string
                  livenessProbe:
                    description: livenessProbe of vineyard fuse pod
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                          This is an alpha field and requires enabling GRPCContainerProbe
                          feature gate.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            description: "Service is the name of the service to place
                              in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                              \n If this is not specified, the default behavior is
                              defined by gRPC."
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully upon probe failure. The grace period
                          is the duration in seconds after the processes running in
                          the pod are sent a termination signal and the time when
                          the processes are forcibly halted with a kill signal. Set
                          this value longer than the expected cleanup time for your
                          process. If this value is nil, the pod's terminationGracePeriodSeconds
                          will be used. Otherwise, this value overrides the value
                          provided by the pod spec. Value must be non-negative integer.
                          The value zero indicates stop immediately via the kill signal
                          (no opportunity to shut down). This is a beta field and
                          requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is
                          used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector is a selector which must be true for
                      the fuse client to fit on a node, this option only effect when
                      global is enabled
                    type: object
                  readinessProbe:
                    description: readinessProbe of vineyard fuse pod
                    properties:
                      exec:
                        description: Exec specifies the action to take.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      grpc:
                        description: GRPC specifies an action involving a GRPC port.
                          This is an alpha field and requires enabling GRPCContainerProbe
                          feature gate.
                        properties:
                          port:
                            description: Port number of the gRPC service. Number must
                              be in the range 1 to 65535.
                            format: int32
                            type: integer
                          service:
                            description: "Service is the name of the service to place
                              in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                              \n If this is not specified, the default behavior is
                              defined by gRPC."
                            type: string
                        required:
                        - port
                        type: object
                      httpGet:
                        description: HTTPGet specifies the http request to perform.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Name or number of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness and startup. Minimum value is
                          1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocket specifies an action involving a TCP
                          port.
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Number or name of the port to access on the
                              container. Number must be in the range 1 to 65535. Name
                              must be an IANA_SVC_NAME.
                            x-kubernetes-int-or-string: true
                        required:
                        - port
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully upon probe failure. The grace period
                          is the duration in seconds after the processes running in
                          the pod are sent a termination signal and the time when
                          the processes are forcibly halted with a kill signal. Set
                          this value longer than the expected cleanup time for your
                          process. If this value is nil, the pod's terminationGracePeriodSeconds
                          will be used. Otherwise, this value overrides the value
                          provided by the pod spec. Value must be non-negative integer.
                          The value zero indicates stop immediately via the kill signal
                          (no opportunity to shut down). This is a beta field and
                          requires enabling ProbeTerminationGracePeriod feature gate.
                          Minimum value is 1. spec.terminationGracePeriodSeconds is
                          used if unset.
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  volumeMounts:
                    description: VolumeMounts specifies the volumes listed in ".spec.volumes"
                      to mount into the vineyardruntime component's filesystem.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which
                            the container's volume should be mounted. Behaves similarly
                            to SubPath but environment variable references $(VAR_NAME)
                            are expanded using the container's environment. Defaults
                            to "" (volume's root). SubPathExpr and SubPath are mutually
                            exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                type: object
              replicas:
                default: 3
                description: Replicas is the number of vineyardd pods to deploy
                format: int32
                type: integer
              vineyardd:
                description: Vineyardd is the configuration of vineyardd
                properties:
                  disablePrometheus:
                    description: Disable monitoring for Vineyard Runtime Prometheus
                      is enabled by default
                    type: boolean
                  env:
                    description: vineyard environment configuration
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    default: vineyardcloudnative/vineyardd
                    description: represent the vineyardd's image
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: the policy about pulling image
                    type: string
                  imageTag:
                    default: latest
                    description: the tag of vineyardd's image
                    type: string
                  metric:
                    description: the configuration of metric
                    properties:
                      enabled:
                        default: false
                        description: Enable metrics
                        type: boolean
                      image:
                        default: vineyardcloudnative/vineyard-grok-exporter
                        description: represent the metric's image
                        type: string
                      imagePullPolicy:
                        default: IfNotPresent
                        description: the policy about pulling image
                        type: string
                    type: object
                  reserveMemory:
                    default: false
                    description: reserve the shared memory for vineyardd
                    type: boolean
                  size:
                    default: ""
                    description: shared memory size for vineyardd
                    type: string
                  socketPath:
                    default: /var/run
                    description: the path of vineyard domain docket
                    type: string
                  spill:
                    description: the configuration of spilling
                    properties:
                      enabled:
                        default: false
                        description: Enable the spill mechanism
                        type: boolean
                      path:
                        default: ""
                        description: the path of spilling
                        type: string
                      pvcName:
                        default: ""
                        description: the pvc name
                        type: string
                      spillLowerRate:
                        default: "0.3"
                        description: low watermark of spilling memory
                        type: string
                      spillUpperRate:
                        default: "0.8"
                        description: high watermark of triggering spilling
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: RuntimeStatus defines the observed state of Runtime
            properties:
              apiGateway:
                description: APIGatewayStatus represents rest api gateway status
                properties:
                  endpoint:
                    description: Endpoint for accessing
                    type: string
                type: object
              cacheAffinity:
                description: CacheAffinity represents the runtime worker pods node
                  affinity including node selector
                properties:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    description: The scheduler will prefer to schedule pods to nodes
                      that satisfy the affinity expressions specified by this field,
                      but it may choose a node that violates one or more of the expressions.
                      The node that is most preferred is the one with the greatest
                      sum of weights, i.e. for each node that meets all of the scheduling
                      requirements (resource request, requiredDuringScheduling affinity
                      expressions, etc.), compute a sum by iterating through the elements
                      of this field and adding "weight" to the sum if the node matches
                      the corresponding matchExpressions; the node(s) with the highest
                      sum are the most preferred.
                    items:
                      description: An empty preferred scheduling term matches all
                        objects with implicit weight 0 (i.e. it's a no-op). A null
                        preferred scheduling term matches no objects (i.e. is also
                        a no-op).
                      properties:
                        preference:
                          description: A node selector term, associated with the corresponding
                            weight.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                          type: object
                        weight:
                          description: Weight associated with matching the corresponding
                            nodeSelectorTerm, in the range 1-100.
                          format: int32
                          type: integer
                      required:
                      - preference
                      - weight
                      type: object
                    type: array
                  requiredDuringSchedulingIgnoredDuringExecution:
                    description: If the affinity requirements specified by this field
                      are not met at scheduling time, the pod will not be scheduled
                      onto the node. If the affinity requirements specified by this
                      field cease to be met at some point during pod execution (e.g.
                      due to an update), the system may or may not try to eventually
                      evict the pod from its node.
                    properties:
                      nodeSelectorTerms:
                        description: Required. A list of node selector terms. The
                          terms are ORed.
                        items:
                          description: A null or empty node selector term matches
                            no objects. The requirements of them are ANDed. The TopologySelectorTerm
                            type implements a subset of the NodeSelectorTerm.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                          type: object
                        type: array
                    required:
                    - nodeSelectorTerms
                    type: object
                type: object
              cacheStates:
                additionalProperties:
                  type: string
                description: CacheStatus represents the total resources of the dataset.
                type: object
              conditions:
                description: Represents the latest available observations of a ddc
                  runtime's current state.
                items:
                  description: Condition describes the state of the cache at a certain
                    point.
                  properties:
                    lastProbeTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of cache condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              currentFuseNumberScheduled:
                description: The total number of nodes that can be running the runtime
                  Fuse pod (including nodes correctly running the runtime Fuse pod).
                format: int32
                type: integer
              currentMasterNumberScheduled:
                description: The total number of nodes that should be running the
                  runtime pod (including nodes correctly running the runtime master
                  pod).
                format: int32
                type: integer
              currentWorkerNumberScheduled:
                description: The total number of nodes that can be running the runtime
                  worker pod (including nodes correctly running the runtime worker
                  pod).
                format: int32
                type: integer
              desiredFuseNumberScheduled:
                description: The total number of nodes that should be running the
                  runtime Fuse pod (including nodes correctly running the runtime
                  Fuse pod).
                format: int32
                type: integer
              desiredMasterNumberScheduled:
                description: The total number of nodes that should be running the
                  runtime pod (including nodes correctly running the runtime master
                  pod).
                format: int32
                type: integer
              desiredWorkerNumberScheduled:
                description: The total number of nodes that should be running the
                  runtime worker pod (including nodes correctly running the runtime
                  worker pod).
                format: int32
                type: integer
              fuseNumberAvailable:
                description: The number of nodes that should be running the runtime
                  Fuse pod and have one or more of the runtime Fuse pod running and
                  available (ready for at least spec.minReadySeconds)
                format: int32
                type: integer
              fuseNumberReady:
                description: The number of nodes that should be running the runtime
                  Fuse pod and have one or more of the runtime Fuse pod running and
                  ready.
                format: int32
                type: integer
              fuseNumberUnavailable:
                description: The number of nodes that should be running the runtime
                  fuse pod and have none of the runtime fuse pod running and available
                  (ready for at least spec.minReadySeconds)
                format: int32
                type: integer
              fusePhase:
                description: FusePhase is the Fuse running phase
                type: string
              fuseReason:
                description: Reason for the condition's last transition.
                type: string
              masterNumberReady:
                description: The number of nodes that should be running the runtime
                  worker pod and have zero or more of the runtime master pod running
                  and ready.
                format: int32
                type: integer
              masterPhase:
                description: MasterPhase is the master running phase
                type: string
              masterReason:
                description: Reason for Master's condition transition
                type: string
              mountTime:
                description: MountTime represents time last mount happened if Mounttime
                  is earlier than master starting time, remount will be required
                format: date-time
                type: string
              mounts:
                description: MountPoints represents the mount points specified in
                  the bounded dataset
                items:
                  description: Mount describes a mounting. <br> Refer to <a href="https://docs.alluxio.io/os/user/stable/en/ufs/S3.html">Alluxio
                    Storage Integrations</a> for more info
                  properties:
                    encryptOptions:
                      description: The secret information
                      items:
                        properties:
                          name:
                            description: The name of encryptOption
                            type: string
                          valueFrom:
                            description: The valueFrom of encryptOption
                            properties:
                              secretKeyRef:
                                description: The encryptInfo obtained from secret
                                properties:
                                  key:
                                    description: The required key in the secret
                                    type: string
                                  name:
                                    description: The name of required secret
                                    type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    mountPoint:
                      description: MountPoint is the mount point of source.
                      minLength: 5
                      type: string
                    name:
                      description: The name of mount
                      minLength: 0
                      type: string
                    options:
                      additionalProperties:
                        type: string
                      description: The Mount Options. <br> Refer to <a href="https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html">Mount
                        Options</a>.  <br> The option has Prefix 'fs.' And you can
                        Learn more from <a href="https://docs.alluxio.io/os/user/stable/en/ufs/S3.html">The
                        Storage Integrations</a>
                      type: object
                    path:
                      description: The path of mount, if not set will be /{Name}
                      type: string
                    readOnly:
                      description: 'Optional: Defaults to false (read-write).'
                      type: boolean
                    shared:
                      description: 'Optional: Defaults to false (shared).'
                      type: boolean
                  type: object
                type: array
              selector:
                description: Selector is used for auto-scaling
                type: string
              setupDuration:
                description: Duration tell user how much time was spent to setup the
                  runtime
                type: string
              valueFile:
                description: config map used to set configurations
                type: string
              workerNumberAvailable:
                description: The number of nodes that should be running the runtime
                  worker pod and have one or more of the runtime worker pod running
                  and available (ready for at least spec.minReadySeconds)
                format: int32
                type: integer
              workerNumberReady:
                description: The number of nodes that should be running the runtime
                  worker pod and have one or more of the runtime worker pod running
                  and ready.
                format: int32
                type: integer
              workerNumberUnavailable:
                description: The number of nodes that should be running the runtime
                  worker pod and have none of the runtime worker pod running and available
                  (ready for at least spec.minReadySeconds)
                format: int32
                type: integer
              workerPhase:
                description: WorkerPhase is the worker running phase
                type: string
              workerReason:
                description: Reason for Worker's condition transition
                type: string
            required:
            - currentFuseNumberScheduled
            - currentMasterNumberScheduled
            - currentWorkerNumberScheduled
            - desiredFuseNumberScheduled
            - desiredMasterNumberScheduled
            - desiredWorkerNumberScheduled
            - fuseNumberReady
            - fusePhase
            - masterNumberReady
            - masterPhase
            - valueFile
            - workerNumberReady
            - workerPhase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
