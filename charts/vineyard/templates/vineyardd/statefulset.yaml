# Copyright 2020-2023 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "vineyard.fullname" . }}-vineyardd
  labels:
    app: {{ template "vineyard.name" . }}
    chart: {{ template "vineyard.chart" . }}
    release: {{ .Release.Name }}
    role: vineyardd
    fluid.io/dataset: {{ .Release.Namespace }}-{{ .Release.Name }}
  ownerReferences:
  {{- if .Values.owner.enabled }}
  - apiVersion: {{ .Values.owner.apiVersion }}
    blockOwnerDeletion: {{ .Values.owner.blockOwnerDeletion }}
    controller: {{ .Values.owner.controller }}
    kind: {{ .Values.owner.kind }}
    name: {{ .Values.owner.name }}
    uid: {{ .Values.owner.uid }}
  {{- end }}
spec:
  replicas: {{ .Values.vineyardd.replicas }}
  selector:
    matchLabels:
      app: {{ template "vineyard.name" . }}
      chart: {{ template "vineyard.chart" . }}
      release: {{ .Release.Name }}
      role: vineyardd
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        {{- if .Values.vineyardd.annotations }}
        {{- range $key, $val := .Values.vineyardd.annotations}}
          {{ $key | quote }}: {{ $val | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: {{ template "vineyard.name" . }}
        chart: {{ template "vineyard.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: vineyardd
        fluid.io/dataset: {{ .Release.Namespace }}-{{ .Release.Name }}
        {{- if .Values.vineyardd.labels }}
        {{- range $key, $val := .Values.vineyardd.labels }}
        {{ $key | quote}}: {{ $val | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- if .Values.vineyardd.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.vineyardd.nodeSelector | trim | indent 8  }}
      {{- end }}
      {{- if .Values.vineyardd.tolerations }}
      tolerations:
{{ toYaml .Values.vineyardd.tolerations | indent 8 }}
      {{- end }}
      containers:
        - name: vineyardd
          {{- if .Values.vineyardd.imageTag }}
          image: {{ .Values.vineyardd.image }}:{{ .Values.vineyardd.imageTag }}
          {{- else }}
          image: {{ .Values.vineyardd.image }}
          {{- end }}
          imagePullPolicy: {{ .Values.vineyardd.imagePullPolicy }}
          command:
          - /bin/bash
          - -c
          - >
            /usr/bin/wait-for-it.sh -t 60 {{ template "vineyard.fullname" . }}-etcd-service.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:2379;
            sleep 1;
            /usr/local/bin/vineyardd
            {{- if .Values.vineyardd.socketPath }}
            --socket {{ .Values.vineyardd.socketPath }}/vineyard.sock
            {{- else }}
            --socket /var/run/vineyard.sock
            {{- end }}
            --size {{ .Values.vineyardd.size }}
            {{- if .Values.vineyardd.reserveMemory }}
            --reserve_memory
            {{- end }}
            --etcd_cmd etcd
            --etcd_prefix /vineyard
            --etcd_endpoint http://{{ template "vineyard.fullname" . }}-etcd-service:2379
            {{- if .Values.vineyardd.spill.enabled }}
            --spill_path {{ .Values.vineyardd.spill.path }}
            --spill_lower_rate {{ .Values.vineyardd.spill.spillLowerRate }}
            --spill_upper_rate {{ .Values.vineyardd.spill.spillUpperRate }}
            {{- end }}
            {{- if .Values.vineyardd.metric.enabled }}
            --metrics
            -log_dir /var/log/vineyard/
            {{- end }}
          env:
          - name: VINEYARDD_NAME
            value: {{ template "vineyard.fullname" . }}-vineyardd
          - name: VINEYARDD_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: USER
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- range $key, $value := .Values.vineyardd.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          ports:
            - name: rpc
              containerPort: 9600
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9600
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
              - ls
              {{- if .Values.vineyardd.socketPath }}
              - {{ .Values.vineyardd.socketPath }}/vineyard.sock
              {{- else }}
              - /var/run/vineyard.sock
              {{- end }}
          volumeMounts:
          {{- if .Values.vineyardd.socketPath }}
          - name: vineyard-socket-volume
            mountPath: {{ .Values.vineyardd.socketPath }}
          {{- else }}
          - name: vineyard-socket-volume
            mountPath: /var/run
          {{- end }}
          {{- if .Values.vineyardd.spill.enabled }}
          - name: spill
            mountPath: {{ .Values.vineyardd.spill.path }}
          {{- end }}
          - name: shm
            mountPath: /dev/shm
          {{- if .Values.vineyardd.metric.enabled }}
          - name: log
            mountPath: /var/log/vineyard
          {{- end }}
        {{- if .Values.vineyardd.metric.enabled }}
        - name: metrics
          image : {{ .Values.vineyardd.metric.image }}
          imagePullPolicy: {{ .Values.vineyardd.metric.imagePullPolicy }}
          command: ["./grok_exporter"]
          args: ["-config", "grok_exporter.yml", "-disable-exporter-metrics", "&"]
          ports:
            - name: exporter
              containerPort: 9144
              protocol: TCP
          volumeMounts:
          - name: log
            mountPath: /var/log/vineyard
        {{- end }}
      volumes:
      {{- if and .Values.vineyardd.spill.enabled .Values.vineyardd.spill.pvcName }}
      - name: spill
        persistentVolumeClaim:
          claimName: {{ .Values.vineyardd.spill.pvcName }}
      {{- end }}
      - name: shm
        emptyDir:
          medium: Memory
      {{- if .Values.vineyardd.metric.enabled }}
      - name: log
        emptyDir: {}
      {{- end }}
      - name: vineyard-socket-volume
        hostPath:
          path: /runtime-mnt/vineyard/{{ .Release.Namespace }}/{{ template "vineyard.fullname" . }}
          type: DirectoryOrCreate
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                     - {{ .Release.Namespace -}} - {{- .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
